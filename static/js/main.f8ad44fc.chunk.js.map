{"version":3,"sources":["components/Navbar.js","components/Layout.js","assets/img/uniworldscreenshot.png","components/TableGrid.js","axiosConfig.js","services/EventRoomService.js","pages/Home.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","background","title","marginRight","spacing","Navbar","classes","AppBar","position","className","Toolbar","Typography","variant","Button","color","component","RouterLink","to","Layout","children","Fragment","CssBaseline","gridContainer","display","gridGap","gridTemplateColumns","gridTemplateRows","breakpoints","down","gridItem","textAlign","alignItems","justifyContent","gridItemBlank","TableGrid","tables","isCorner","row","col","getTableIndex","i","length","newX","Math","abs","posX","newY","posY","gridItems","tableIndex","push","id","generateGridItems","map","axios","create","baseURL","headers","url","get","this","data","post","put","delete","jumbo","paddingTop","paddingBottom","mainSection","eventInfoPanel","marginTop","padding","img","width","divider","centerTableGrid","Home","React","useState","eventRooms","setEventRooms","currentEventRoom","setCurrentEventRoom","useEffect","a","EventRoomService","getAll","console","log","fetchEventRooms","Paper","Container","Grid","container","item","md","xs","href","target","rel","src","UniWorldScreenShotImg","alt","List","aria-label","eventRoom","index","ListItem","button","selected","onClick","handleClickEventRoom","ListItemIcon","ListItemText","primary","primaryTypographyProps","noWrap","Card","CardContent","gutterBottom","moment","eventDate","format","host","meetingTables","scene","CardActions","size","App","exact","path","render","props","About","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ad44fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      background: \"#1976d2\",\n    },\n    title: {\n      marginRight: theme.spacing(2),\n    },\n  })\n);\n\nconst Navbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          UniWorld Editor\n        </Typography>\n        <Button color=\"inherit\" component={RouterLink} to=\"/\">\n          Home\n        </Button>\n        <Button color=\"inherit\" component={RouterLink} to=\"/about\">\n          About\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Navbar from \"./Navbar\";\n\nconst Layout = ({ children }) => (\n  <React.Fragment>\n    <CssBaseline />\n    <Navbar />\n    {children}\n  </React.Fragment>\n);\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/uniworldscreenshot.52053eda.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    display: \"grid\",\n    gridGap: \"5px\",\n    gridTemplateColumns: \"repeat(5, 75px)\",\n    gridTemplateRows: \"repeat(5, 75px)\",\n    [theme.breakpoints.down(\"xs\")]: {\n      gridTemplateColumns: \"repeat(5, 50px)\",\n      gridTemplateRows: \"repeat(5, 50px)\",\n    },\n    gridAutoFlow: \"row\",\n  },\n  gridItem: {\n    background: \"#ccc\",\n    display: \"flex\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  gridItemBlank: {\n    display: \"flex\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst TableGrid = ({ tables }) => {\n  const classes = useStyles();\n\n  const isCorner = (row, col) =>\n    (row === 0 && col === 0) ||\n    (row === 4 && col === 4) ||\n    (row === 4 && col === 0) ||\n    (row === 0 && col === 4);\n\n  const getTableIndex = (row, col) => {\n    for (let i = 0; i < tables.length; i++) {\n      // convert (-2 to 2 range) coordinates into (0 to 4 range) coordinates\n      const newX = Math.abs(tables[i].posX - 2);\n      const newY = Math.abs(tables[i].posY - 2);\n      if (newX === row && newY === col) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  const generateGridItems = () => {\n    const gridItems = [];\n    for (let row = 0; row < 5; row++) {\n      for (let col = 0; col < 5; col++) {\n        const tableIndex = getTableIndex(row, col);\n        if (isCorner(row, col)) {\n          gridItems.push(<div className={classes.gridItemBlank}> </div>);\n        } else if (tableIndex !== -1) {\n          gridItems.push(\n            <div id={tableIndex} className={classes.gridItem}>\n              x\n            </div>\n          );\n        } else {\n          gridItems.push(<div className={classes.gridItem}> </div>);\n        }\n      }\n    }\n    return gridItems;\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.gridContainer}>\n        {generateGridItems().map((gridItem) => (\n          <React.Fragment>{gridItem}</React.Fragment>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TableGrid;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://uniworld.azurewebsites.net/api\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import axios from \"../axiosConfig\";\n\nclass EventRoomService {\n  url = \"/eventrooms\";\n\n  async getAll() {\n    return (await axios.get(`${this.url}?showDetails=true`)).data;\n  }\n\n  async get(id) {\n    return (await axios.get(`${this.url}/${id}`)).data;\n  }\n\n  async create(data) {\n    return (await axios.post(this.url, data)).data;\n  }\n\n  async update(id, data) {\n    return (await axios.put(`${this.url}/${id}`, data)).data;\n  }\n\n  async delete(id) {\n    return await axios.delete(`${this.url}/${id}`);\n  }\n}\n\nexport default new EventRoomService();\n","import React from \"react\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Container,\n  Typography,\n  Paper,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n} from \"@material-ui/core\";\nimport DesktopWindowsIcon from \"@material-ui/icons/DesktopWindows\";\nimport UniWorldScreenShotImg from \"../assets/img/uniworldscreenshot.png\";\nimport TableGrid from \"../components/TableGrid\";\nimport EventRoomService from \"../services/EventRoomService\";\n\nconst useStyles = makeStyles((theme) => ({\n  jumbo: {\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n  },\n  mainSection: {\n    paddingTop: theme.spacing(5),\n  },\n  eventInfoPanel: {\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  img: {\n    width: \"100%\",\n  },\n  divider: {\n    padding: theme.spacing(1),\n  },\n  centerTableGrid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const [eventRooms, setEventRooms] = React.useState([]);\n  const [currentEventRoom, setCurrentEventRoom] = React.useState(0);\n\n  React.useEffect(() => {\n    async function fetchEventRooms() {\n      try {\n        const data = await EventRoomService.getAll();\n        console.log(data);\n        setEventRooms(data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchEventRooms();\n  }, []);\n\n  const handleClickEventRoom = (index) => {\n    setCurrentEventRoom(index);\n  };\n\n  return (\n    <React.Fragment>\n      <Paper>\n        <Container>\n          <Grid container className={classes.jumbo}>\n            <Grid item md={8} xs={12}>\n              <Typography variant=\"h2\">UniWorld Editor</Typography>\n              <Typography variant=\"subtitle1\">\n                This is a web editor tool for managing event rooms in the{\" \"}\n                <a\n                  href=\"https://brianmin.tech/UnityWebGL/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  UniWorld platform\n                </a>\n              </Typography>\n            </Grid>\n            <Grid item md={4} xs={12}>\n              <img src={UniWorldScreenShotImg} alt=\"\" className={classes.img} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Paper>\n      <Container className={classes.mainSection}>\n        <Typography variant=\"h4\">Event Rooms</Typography>\n        <Grid container spacing={2}>\n          <Grid item md={3} xs={12}>\n            <List component=\"nav\" aria-label=\"event rooms\">\n              {eventRooms.length > 0 &&\n                eventRooms.map((eventRoom, index) => (\n                  <ListItem\n                    button\n                    selected={currentEventRoom === index}\n                    onClick={() => handleClickEventRoom(index)}\n                  >\n                    <ListItemIcon>\n                      <DesktopWindowsIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={eventRoom.title}\n                      primaryTypographyProps={{ noWrap: true }}\n                    />\n                  </ListItem>\n                ))}\n            </List>\n          </Grid>\n          <Grid item md={9} xs={12}>\n            <Card className={classes.eventInfoPanel}>\n              {eventRooms.length > 0 ? (\n                <React.Fragment>\n                  <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      {moment(eventRooms[currentEventRoom].eventDate).format(\n                        \"MMMM Do YYYY, h:mm a\"\n                      )}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      {eventRooms[currentEventRoom].title}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                      Hosted by {eventRooms[currentEventRoom].host}\n                    </Typography>\n                    <div className={classes.divider} />\n                    <Grid container>\n                      <Grid item md={8} xs={12} className={classes.centerTableGrid}>\n                        <TableGrid tables={eventRooms[currentEventRoom].meetingTables} />\n                        <div className={classes.divider} />\n                      </Grid>\n                      <Grid item md={4} xs={12}>\n                        <Typography variant=\"subtitle2\">Scene: </Typography>\n                        <Typography variant=\"body2\">\n                          {eventRooms[currentEventRoom].scene}\n                        </Typography>\n                        <div className={classes.divider} />\n                        <Typography variant=\"subtitle2\">Background: </Typography>\n                        <Typography variant=\"body2\">\n                          {eventRooms[currentEventRoom].background\n                            ? eventRooms[currentEventRoom].background\n                            : \"None\"}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\">Edit</Button>\n                    <Button size=\"small\">Remove</Button>\n                  </CardActions>\n                </React.Fragment>\n              ) : (\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Create an event room\n                </Typography>\n              )}\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default () => <Typography variant=\"h4\">About!</Typography>;\n","import React, { Fragment } from \"react\";\nimport { Redirect, BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\n\nconst App = () => (\n  <Fragment>\n    <BrowserRouter>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Layout>\n              <Home {...props} />\n            </Layout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/about\"\n          render={(props) => (\n            <Layout>\n              <About {...props} />\n            </Layout>\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  </Fragment>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}